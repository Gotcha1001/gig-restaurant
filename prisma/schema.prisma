generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(cuid())
  clerkUserId      String          @unique
  email            String          @unique
  username         String?
  profileImages    String[] // Change from String to String[] for multiple images
  profileType      String
  name             String?
  imageUrl         String?
  band             Band?           @relation("UserBand")
  gigProvider      GigProvider?    @relation("UserGigProvider")
  interactionsFrom Interaction[]   @relation("InteractionFrom")
  interactionsTo   Interaction[]   @relation("InteractionTo")
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  SharedProfile    SharedProfile[]
}

model SharedProfile {
  id           String   @id @default(cuid())
  userId       String // ID of the user whose profile is shared
  sharedBy     String // ID of the user who shared the profile
  profileType  String // "band" or "gigProvider"
  shareDate    DateTime @default(now())
  shareMessage String? // Optional message when sharing

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([sharedBy])
}

model Band {
  id           String   @id @default(cuid())
  name         String
  genre        String
  description  String?
  website      String?
  videoUrl     String?
  profileImage String?
  headerImage  String?
  email        String?
  phoneNumber  String?
  facebookUrl  String?
  instagramUrl String?
  imageUrl     String?
  bandMembers  String[]
  photos       String[]
  audioTracks  String[]
  location     String
  latitude     Float?
  longitude    Float?
  userId       String   @unique
  user         User     @relation("UserBand", fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model GigProvider {
  id           String   @id @default(cuid())
  name         String
  services     String
  description  String?
  website      String?
  profileImage String?
  headerImage  String?
  email        String? // New field
  phoneNumber  String? // New field
  imageUrl     String? // Add this line for imageUrl (gig provider profile picture)
  facebookUrl  String? // New field
  instagramUrl String? // New field
  photos       String[] // Add this line
  location     String
  latitude     Float?
  longitude    Float?
  userId       String   @unique
  user         User     @relation("UserGigProvider", fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Interaction {
  id         String   @id @default(cuid())
  fromUserId String
  toUserId   String
  message    String?
  status     String // e.g., "pending", "accepted", "rejected"
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  fromUser User @relation("InteractionFrom", fields: [fromUserId], references: [id])
  toUser   User @relation("InteractionTo", fields: [toUserId], references: [id])
}
